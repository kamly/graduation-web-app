/**
* Created by lijiaming on 2018/1/1.
*/

<style lang="less" rel="stylesheet/less">
  page {
    background-color: #ffffff;
    color: #0e0e0e;
  }
  .index-container {
    display: flex;
    flex-direction: column;
    padding: 0 72rpx;
    .content-container view{
      margin-top: 140rpx;
      font-size: 58rpx;
      color: #212121;
    }
    .input-container {
      margin-top: 284rpx;
      .input-placeholder{
        font-weight: 200;
        font-size: 36rpx;
        color: #bdbdbd;
      }
      .input {
        padding-bottom: 48rpx;
        border-bottom: 3rpx solid #e5e5e5;
      }
      .input-password {
        margin-top: 50rpx;
      }
    }
    .bottom-container {
      margin-top: 78rpx;
      .bottom {
        height: 90rpx;
        background-color: #0084ff;
        color: #ffffff;
        font-size: 36rpx;
      }
    }
  }
</style>

<template>
  <view class="index-container">
    <view class="content-container">
      <view>Hello {{userInfoFromWeApp.gender == 1 ? 'Boy' : 'Girl' }} ！</view>
    </view>
    <view class="input-container">
      <input class="input input-email" placeholder="邮箱" value="{{inputEmail}}" bindblur="inputEmail"/>
      <input class="input input-password" placeholder="密码" value="{{inputPassword}}" bindblur="inputPassword"
             type="password"/>
    </view>
    <view class="bottom-container">
      <button class="bottom" type="default" bindtap="clickBinding"> 绑定 </button>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import util from '../utils/util'
  import {apiFetchBindingEmailRedux} from '../redux/user/actions'
  import store from '../store'

  export default class Register extends wepy.page {
    config = {
      navigationBarTitleText: '注册',
      navigationBarBackgroundColor: '#ffffff',
      navigationBarTextStyle: 'black',
      disableScroll: true
    }
    data = {
      userInfo: '', // 用户信息
      inputEmail: '', // 用户输入的邮箱
      inputPassword: '', // 用户输入的密码
      userInfoFromWeApp: '' // 用户信息来自小程序
    }
    async onLoad() {
      const that = this

      // 获取用户信息
      const userInfoFromWeApp = await util.wxGetInfo.getUserInfoPromise()
      that.userInfoFromWeApp = userInfoFromWeApp.userInfo

      // 检查有storage中有没有bindingEmailUserInfo
      if (!wepy.getStorageSync('bindingEmailUserInfo')) {
        util.wxGoTo.switchTab('./index')
      }
      // 获取storage中有没有bindingEmailUserInfo，并且删除
      that.userInfo = wepy.getStorageSync('bindingEmailUserInfo')
      wepy.removeStorageSync('bindingEmailUserInfo')

      that.$apply()
    }
    methods = {
      // 获取输入
      async inputEmail (event) {
        const that = this
        that.inputEmail = event.detail.value
        that.$apply()
      },
      // 获取输入
      async inputPassword (event) {
        const that = this
        that.inputPassword = event.detail.value
        that.$apply()
      },

      // 点击绑定
      async clickBinding () {
        const that = this
        // 不能为空
        if (util.common.isEmpty(that.inputEmail) || util.common.isEmpty(that.inputPassword)) {
          util.wxToast.loading('500', '请输入邮箱或者密码')
        }

        // 进行绑定
        const res = await store.dispatch(apiFetchBindingEmailRedux({
          userInfo: that.userInfo,
          email: that.inputEmail,
          password: that.inputPassword
        }))

        // 判断有误错误
        const isSuccess = await util.common.isSuccessPromise(res.data, false)
        if (isSuccess) {
          // 写入storage
          wepy.setStorageSync('token', res.data.message.token)
          // 弹出提示
          await util.wxToast.success(10000)
          await util.wxGoTo.switchTab('./index')
        } else {
          util.wxToast.showModal('错误提示', res.data.message, false)
        }
      }
    }
  }
</script>
