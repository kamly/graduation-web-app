/**
* Created by lijiaming on 2018/3/18.
*/

<style lang="less" rel="stylesheet/less">
  .loading-container-0 {
    margin: 450rpx auto 0 auto;
    width: 120rpx;
    height: 120rpx;
    text-align: center;
    view {
      margin: 5rpx;
      height: 100%;
      width: 12rpx;
      display: inline-block;
      -webkit-animation: stretchdelay 1.2s infinite ease-in-out;
      animation: stretchdelay 1.2s infinite ease-in-out;
    }

    .rect2 {
      -webkit-animation-delay: -1.1s;
      animation-delay: -1.1s;
    }

    .rect3 {
      -webkit-animation-delay: -1.0s;
      animation-delay: -1.0s;
    }

    .rect4 {
      -webkit-animation-delay: -0.9s;
      animation-delay: -0.9s;
    }

    .rect5 {
      -webkit-animation-delay: -0.8s;
      animation-delay: -0.8s;
    }

    @-webkit-keyframes stretchdelay {
      0%, 40%, 100% { -webkit-transform: scaleY(0.4) }
      20% { -webkit-transform: scaleY(1.0) }
    }

    @keyframes stretchdelay {
      0%, 40%, 100% {
        transform: scaleY(0.4);
        -webkit-transform: scaleY(0.4);
      }  20% {
           transform: scaleY(1.0);
           -webkit-transform: scaleY(1.0);
         }
    }

  }
  .loading-container-1 {
    margin: 450rpx auto 0 auto;
    display: block;
    width: 120rpx;
    height: 120rpx;
    position: relative;
    .cube1, .cube2 {
      width: 60rpx;
      height: 60rpx;
      position: absolute;
      top: 0;
      left: 0;
      -webkit-animation: cubemove 1.8s infinite ease-in-out;
      animation: cubemove 1.8s infinite ease-in-out;
    }

    .cube2 {
      -webkit-animation-delay: -0.9s;
      animation-delay: -0.9s;
    }

    @-webkit-keyframes cubemove {
      25% { -webkit-transform: translateX(42px) rotate(-90deg) scale(0.5) }
      50% { -webkit-transform: translateX(42px) translateY(42px) rotate(-180deg) }
      75% { -webkit-transform: translateX(0px) translateY(42px) rotate(-270deg) scale(0.5) }
      100% { -webkit-transform: rotate(-360deg) }
    }

    @keyframes cubemove {
      25% {
        transform: translateX(42px) rotate(-90deg) scale(0.5);
        -webkit-transform: translateX(42px) rotate(-90deg) scale(0.5);
      } 50% {
          transform: translateX(42px) translateY(42px) rotate(-179deg);
          -webkit-transform: translateX(42px) translateY(42px) rotate(-179deg);
        } 50.1% {
            transform: translateX(42px) translateY(42px) rotate(-180deg);
            -webkit-transform: translateX(42px) translateY(42px) rotate(-180deg);
          } 75% {
              transform: translateX(0px) translateY(42px) rotate(-270deg) scale(0.5);
              -webkit-transform: translateX(0px) translateY(42px) rotate(-270deg) scale(0.5);
            } 100% {
                transform: rotate(-360deg);
                -webkit-transform: rotate(-360deg);
              }
    }
  }
  .loading-container-2 {
    margin: 450rpx auto 0 auto;
    display: block;
    width: 120rpx;
    height: 120rpx;
    -webkit-animation: rotateplane 1.2s infinite ease-in-out;
    animation: rotateplane 1.2s infinite ease-in-out;
    @-webkit-keyframes rotateplane {
      0% { -webkit-transform: perspective(120px) }
      50% { -webkit-transform: perspective(120px) rotateY(180deg) }
      100% { -webkit-transform: perspective(120px) rotateY(180deg)  rotateX(180deg) }
    }

    @keyframes rotateplane {
      0% {
        transform: perspective(120px) rotateX(0deg) rotateY(0deg);
        -webkit-transform: perspective(120px) rotateX(0deg) rotateY(0deg)
      } 50% {
          transform: perspective(120px) rotateX(-180.1deg) rotateY(0deg);
          -webkit-transform: perspective(120px) rotateX(-180.1deg) rotateY(0deg)
        } 100% {
            transform: perspective(120px) rotateX(-180deg) rotateY(-179.9deg);
            -webkit-transform: perspective(120px) rotateX(-180deg) rotateY(-179.9deg);
          }
    }
  }
  .loading-container-3 {
    margin: 450rpx auto 0 auto;
    display: block;
    width: 120rpx;
    height: 120rpx;
    position: relative;
    text-align: center;

    -webkit-animation: rotate 2.0s infinite linear;
    animation: rotate 2.0s infinite linear;
    .dot1, .dot2 {
      width: 60%;
      height: 60%;
      display: inline-block;
      position: absolute;
      top: 0;
      border-radius: 100%;

      -webkit-animation: bounce 2.0s infinite ease-in-out;
      animation: bounce 2.0s infinite ease-in-out;
    }

    .dot2 {
      top: auto;
      bottom: 0px;
      -webkit-animation-delay: -1.0s;
      animation-delay: -1.0s;
    }

    @-webkit-keyframes rotate { 100% { -webkit-transform: rotate(360deg) }}
    @keyframes rotate { 100% { transform: rotate(360deg); -webkit-transform: rotate(360deg) }}

    @-webkit-keyframes bounce {
      0%, 100% { -webkit-transform: scale(0.0) }
      50% { -webkit-transform: scale(1.0) }
    }

    @keyframes bounce {
      0%, 100% {
        transform: scale(0.0);
        -webkit-transform: scale(0.0);
      } 50% {
          transform: scale(1.0);
          -webkit-transform: scale(1.0);
        }
    }
  }
</style>

<template>
  <view>
    <block wx:if="{{loadingContainer === 0}}">
      <view class="loading-container-0">
        <view class="rect1" style="background-color:{{loadingColor}}"></view>
        <view class="rect2" style="background-color:{{loadingColor}}"></view>
        <view class="rect3" style="background-color:{{loadingColor}}"></view>
        <view class="rect4" style="background-color:{{loadingColor}}"></view>
        <view class="rect5" style="background-color:{{loadingColor}}"></view>
      </view>
    </block>

    <block wx:if="{{loadingContainer === 1}}">
      <div class="loading-container-1">
        <div class="cube1" style="background-color:{{loadingColor}}"></div>
        <div class="cube2" style="background-color:{{loadingColor}}"></div>
      </div>
    </block>

    <block wx:if="{{loadingContainer === 2}}">
      <div class="loading-container-2" style="background-color:{{loadingColor}}"></div>
    </block>

    <block wx:if="{{loadingContainer === 3}}">
      <div class="loading-container-3">
        <div class="dot1" style="background-color:{{loadingColor}}"></div>
        <div class="dot2" style="background-color:{{loadingColor}}"></div>
      </div>
    </block>

  </view>
</template>

<script>
    import wepy from 'wepy'

    export default class loadingComponent extends wepy.component {
      props = {
        // 父向子单向动态传值
        loadingContainer: {
          type: [Number, String],
          coerce: function (v) {
            return +v
          },
          default: 0
        },
        loadingColor: {
          type: String,
          default: '#2d80ff'
        }
      }
    }
</script>
